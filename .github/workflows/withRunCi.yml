# .github 폴더 생성 후 그 안에 workflows 폴더 생성
# workflows 폴더에 .yml 파일을 생성

# 개발자가 작업이 끝나고 브랜치에 "push" 한다.
name: withRunCi
on: 
  push:
    branches: [dev]

# 코드를 "build"하고 "test" 코드를 통해 검사한다.
jobs:
  run-test:
    name: Run Test
    runs-on: ubuntu-latest
    steps:
      - name: 1. Get Codes
        uses: actions/checkout@v4

      - name: 2. Add Cache
        uses: actions/cache@v4
        id: npm-cache
        with: 
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo 'npm cache hit!'
      - if: steps.npm-cache.outputs.cache-hit != 'true'
        run: echo 'npm cache missed!'

      - name: 3. Install Dependencies
        run: npm install

      - name: 4. Run Test
        run: npm run test

# 빌드와 테스트가 모두 성공적으로 끝난다면 PR 템플렛을 생성한다.